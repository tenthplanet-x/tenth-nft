// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: operation.proto

package com.tenth.nft.protobuf;

public final class NftOperation {
  private NftOperation() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlockchainDTOOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.BlockchainDTO)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string mainCurrency = 1;</code>
     * @return Whether the mainCurrency field is set.
     */
    boolean hasMainCurrency();
    /**
     * <code>required string mainCurrency = 1;</code>
     * @return The mainCurrency.
     */
    java.lang.String getMainCurrency();
    /**
     * <code>required string mainCurrency = 1;</code>
     * @return The bytes for mainCurrency.
     */
    com.google.protobuf.ByteString
        getMainCurrencyBytes();

    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO> 
        getCurrenciesList();
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrencies(int index);
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    int getCurrenciesCount();
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    java.util.List<? extends com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> 
        getCurrenciesOrBuilderList();
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrenciesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.BlockchainDTO}
   */
  public static final class BlockchainDTO extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.BlockchainDTO)
      BlockchainDTOOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockchainDTO.newBuilder() to construct.
    private BlockchainDTO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockchainDTO() {
      mainCurrency_ = "";
      currencies_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlockchainDTO();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockchainDTO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              mainCurrency_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                currencies_ = new java.util.ArrayList<com.tenth.nft.protobuf.NftOperation.CurrencyDTO>();
                mutable_bitField0_ |= 0x00000002;
              }
              currencies_.add(
                  input.readMessage(com.tenth.nft.protobuf.NftOperation.CurrencyDTO.PARSER, extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          currencies_ = java.util.Collections.unmodifiableList(currencies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_BlockchainDTO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.BlockchainDTO.class, com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder.class);
    }

    private int bitField0_;
    public static final int MAINCURRENCY_FIELD_NUMBER = 1;
    private volatile java.lang.Object mainCurrency_;
    /**
     * <code>required string mainCurrency = 1;</code>
     * @return Whether the mainCurrency field is set.
     */
    @java.lang.Override
    public boolean hasMainCurrency() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string mainCurrency = 1;</code>
     * @return The mainCurrency.
     */
    @java.lang.Override
    public java.lang.String getMainCurrency() {
      java.lang.Object ref = mainCurrency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mainCurrency_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string mainCurrency = 1;</code>
     * @return The bytes for mainCurrency.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMainCurrencyBytes() {
      java.lang.Object ref = mainCurrency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mainCurrency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENCIES_FIELD_NUMBER = 2;
    private java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO> currencies_;
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    @java.lang.Override
    public java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO> getCurrenciesList() {
      return currencies_;
    }
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> 
        getCurrenciesOrBuilderList() {
      return currencies_;
    }
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    @java.lang.Override
    public int getCurrenciesCount() {
      return currencies_.size();
    }
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrencies(int index) {
      return currencies_.get(index);
    }
    /**
     * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrenciesOrBuilder(
        int index) {
      return currencies_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMainCurrency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCurrenciesCount(); i++) {
        if (!getCurrencies(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mainCurrency_);
      }
      for (int i = 0; i < currencies_.size(); i++) {
        output.writeMessage(2, currencies_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mainCurrency_);
      }
      for (int i = 0; i < currencies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, currencies_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.BlockchainDTO)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.BlockchainDTO other = (com.tenth.nft.protobuf.NftOperation.BlockchainDTO) obj;

      if (hasMainCurrency() != other.hasMainCurrency()) return false;
      if (hasMainCurrency()) {
        if (!getMainCurrency()
            .equals(other.getMainCurrency())) return false;
      }
      if (!getCurrenciesList()
          .equals(other.getCurrenciesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMainCurrency()) {
        hash = (37 * hash) + MAINCURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getMainCurrency().hashCode();
      }
      if (getCurrenciesCount() > 0) {
        hash = (37 * hash) + CURRENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getCurrenciesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.BlockchainDTO prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.BlockchainDTO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.BlockchainDTO)
        com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_BlockchainDTO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.BlockchainDTO.class, com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.BlockchainDTO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCurrenciesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        mainCurrency_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (currenciesBuilder_ == null) {
          currencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          currenciesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTO getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTO build() {
        com.tenth.nft.protobuf.NftOperation.BlockchainDTO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTO buildPartial() {
        com.tenth.nft.protobuf.NftOperation.BlockchainDTO result = new com.tenth.nft.protobuf.NftOperation.BlockchainDTO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mainCurrency_ = mainCurrency_;
        if (currenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            currencies_ = java.util.Collections.unmodifiableList(currencies_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.currencies_ = currencies_;
        } else {
          result.currencies_ = currenciesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.BlockchainDTO) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.BlockchainDTO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.BlockchainDTO other) {
        if (other == com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance()) return this;
        if (other.hasMainCurrency()) {
          bitField0_ |= 0x00000001;
          mainCurrency_ = other.mainCurrency_;
          onChanged();
        }
        if (currenciesBuilder_ == null) {
          if (!other.currencies_.isEmpty()) {
            if (currencies_.isEmpty()) {
              currencies_ = other.currencies_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCurrenciesIsMutable();
              currencies_.addAll(other.currencies_);
            }
            onChanged();
          }
        } else {
          if (!other.currencies_.isEmpty()) {
            if (currenciesBuilder_.isEmpty()) {
              currenciesBuilder_.dispose();
              currenciesBuilder_ = null;
              currencies_ = other.currencies_;
              bitField0_ = (bitField0_ & ~0x00000002);
              currenciesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCurrenciesFieldBuilder() : null;
            } else {
              currenciesBuilder_.addAllMessages(other.currencies_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMainCurrency()) {
          return false;
        }
        for (int i = 0; i < getCurrenciesCount(); i++) {
          if (!getCurrencies(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.BlockchainDTO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.BlockchainDTO) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object mainCurrency_ = "";
      /**
       * <code>required string mainCurrency = 1;</code>
       * @return Whether the mainCurrency field is set.
       */
      public boolean hasMainCurrency() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string mainCurrency = 1;</code>
       * @return The mainCurrency.
       */
      public java.lang.String getMainCurrency() {
        java.lang.Object ref = mainCurrency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mainCurrency_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string mainCurrency = 1;</code>
       * @return The bytes for mainCurrency.
       */
      public com.google.protobuf.ByteString
          getMainCurrencyBytes() {
        java.lang.Object ref = mainCurrency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mainCurrency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string mainCurrency = 1;</code>
       * @param value The mainCurrency to set.
       * @return This builder for chaining.
       */
      public Builder setMainCurrency(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mainCurrency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string mainCurrency = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMainCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mainCurrency_ = getDefaultInstance().getMainCurrency();
        onChanged();
        return this;
      }
      /**
       * <code>required string mainCurrency = 1;</code>
       * @param value The bytes for mainCurrency to set.
       * @return This builder for chaining.
       */
      public Builder setMainCurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mainCurrency_ = value;
        onChanged();
        return this;
      }

      private java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO> currencies_ =
        java.util.Collections.emptyList();
      private void ensureCurrenciesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          currencies_ = new java.util.ArrayList<com.tenth.nft.protobuf.NftOperation.CurrencyDTO>(currencies_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> currenciesBuilder_;

      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO> getCurrenciesList() {
        if (currenciesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(currencies_);
        } else {
          return currenciesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public int getCurrenciesCount() {
        if (currenciesBuilder_ == null) {
          return currencies_.size();
        } else {
          return currenciesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrencies(int index) {
        if (currenciesBuilder_ == null) {
          return currencies_.get(index);
        } else {
          return currenciesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder setCurrencies(
          int index, com.tenth.nft.protobuf.NftOperation.CurrencyDTO value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.set(index, value);
          onChanged();
        } else {
          currenciesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder setCurrencies(
          int index, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.set(index, builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder addCurrencies(com.tenth.nft.protobuf.NftOperation.CurrencyDTO value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.add(value);
          onChanged();
        } else {
          currenciesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder addCurrencies(
          int index, com.tenth.nft.protobuf.NftOperation.CurrencyDTO value) {
        if (currenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCurrenciesIsMutable();
          currencies_.add(index, value);
          onChanged();
        } else {
          currenciesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder addCurrencies(
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.add(builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder addCurrencies(
          int index, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder builderForValue) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.add(index, builderForValue.build());
          onChanged();
        } else {
          currenciesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder addAllCurrencies(
          java.lang.Iterable<? extends com.tenth.nft.protobuf.NftOperation.CurrencyDTO> values) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, currencies_);
          onChanged();
        } else {
          currenciesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder clearCurrencies() {
        if (currenciesBuilder_ == null) {
          currencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          currenciesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public Builder removeCurrencies(int index) {
        if (currenciesBuilder_ == null) {
          ensureCurrenciesIsMutable();
          currencies_.remove(index);
          onChanged();
        } else {
          currenciesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder getCurrenciesBuilder(
          int index) {
        return getCurrenciesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrenciesOrBuilder(
          int index) {
        if (currenciesBuilder_ == null) {
          return currencies_.get(index);  } else {
          return currenciesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public java.util.List<? extends com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> 
           getCurrenciesOrBuilderList() {
        if (currenciesBuilder_ != null) {
          return currenciesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(currencies_);
        }
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder addCurrenciesBuilder() {
        return getCurrenciesFieldBuilder().addBuilder(
            com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder addCurrenciesBuilder(
          int index) {
        return getCurrenciesFieldBuilder().addBuilder(
            index, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance());
      }
      /**
       * <code>repeated .com.ruixi.tpulse.convention.CurrencyDTO currencies = 2;</code>
       */
      public java.util.List<com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder> 
           getCurrenciesBuilderList() {
        return getCurrenciesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> 
          getCurrenciesFieldBuilder() {
        if (currenciesBuilder_ == null) {
          currenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder>(
                  currencies_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          currencies_ = null;
        }
        return currenciesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.BlockchainDTO)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.BlockchainDTO)
    private static final com.tenth.nft.protobuf.NftOperation.BlockchainDTO DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.BlockchainDTO();
    }

    public static com.tenth.nft.protobuf.NftOperation.BlockchainDTO getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<BlockchainDTO>
        PARSER = new com.google.protobuf.AbstractParser<BlockchainDTO>() {
      @java.lang.Override
      public BlockchainDTO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockchainDTO(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockchainDTO> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockchainDTO> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.BlockchainDTO getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CurrencyDTOOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.CurrencyDTO)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string currency = 1;</code>
     * @return Whether the currency field is set.
     */
    boolean hasCurrency();
    /**
     * <code>required string currency = 1;</code>
     * @return The currency.
     */
    java.lang.String getCurrency();
    /**
     * <code>required string currency = 1;</code>
     * @return The bytes for currency.
     */
    com.google.protobuf.ByteString
        getCurrencyBytes();

    /**
     * <code>optional string blockchain = 2;</code>
     * @return Whether the blockchain field is set.
     */
    boolean hasBlockchain();
    /**
     * <code>optional string blockchain = 2;</code>
     * @return The blockchain.
     */
    java.lang.String getBlockchain();
    /**
     * <code>optional string blockchain = 2;</code>
     * @return The bytes for blockchain.
     */
    com.google.protobuf.ByteString
        getBlockchainBytes();
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.CurrencyDTO}
   */
  public static final class CurrencyDTO extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.CurrencyDTO)
      CurrencyDTOOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CurrencyDTO.newBuilder() to construct.
    private CurrencyDTO(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CurrencyDTO() {
      currency_ = "";
      blockchain_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CurrencyDTO();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CurrencyDTO(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              currency_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              blockchain_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_CurrencyDTO_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO.class, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENCY_FIELD_NUMBER = 1;
    private volatile java.lang.Object currency_;
    /**
     * <code>required string currency = 1;</code>
     * @return Whether the currency field is set.
     */
    @java.lang.Override
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string currency = 1;</code>
     * @return The currency.
     */
    @java.lang.Override
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currency_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string currency = 1;</code>
     * @return The bytes for currency.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BLOCKCHAIN_FIELD_NUMBER = 2;
    private volatile java.lang.Object blockchain_;
    /**
     * <code>optional string blockchain = 2;</code>
     * @return Whether the blockchain field is set.
     */
    @java.lang.Override
    public boolean hasBlockchain() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string blockchain = 2;</code>
     * @return The blockchain.
     */
    @java.lang.Override
    public java.lang.String getBlockchain() {
      java.lang.Object ref = blockchain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blockchain_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string blockchain = 2;</code>
     * @return The bytes for blockchain.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBlockchainBytes() {
      java.lang.Object ref = blockchain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockchain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurrency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, currency_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, blockchain_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, currency_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, blockchain_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.CurrencyDTO)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.CurrencyDTO other = (com.tenth.nft.protobuf.NftOperation.CurrencyDTO) obj;

      if (hasCurrency() != other.hasCurrency()) return false;
      if (hasCurrency()) {
        if (!getCurrency()
            .equals(other.getCurrency())) return false;
      }
      if (hasBlockchain() != other.hasBlockchain()) return false;
      if (hasBlockchain()) {
        if (!getBlockchain()
            .equals(other.getBlockchain())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency().hashCode();
      }
      if (hasBlockchain()) {
        hash = (37 * hash) + BLOCKCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getBlockchain().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.CurrencyDTO prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.CurrencyDTO}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.CurrencyDTO)
        com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_CurrencyDTO_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.CurrencyDTO.class, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.CurrencyDTO.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        currency_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        blockchain_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO build() {
        com.tenth.nft.protobuf.NftOperation.CurrencyDTO result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO buildPartial() {
        com.tenth.nft.protobuf.NftOperation.CurrencyDTO result = new com.tenth.nft.protobuf.NftOperation.CurrencyDTO(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currency_ = currency_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.blockchain_ = blockchain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.CurrencyDTO) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.CurrencyDTO)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.CurrencyDTO other) {
        if (other == com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance()) return this;
        if (other.hasCurrency()) {
          bitField0_ |= 0x00000001;
          currency_ = other.currency_;
          onChanged();
        }
        if (other.hasBlockchain()) {
          bitField0_ |= 0x00000002;
          blockchain_ = other.blockchain_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCurrency()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.CurrencyDTO parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.CurrencyDTO) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object currency_ = "";
      /**
       * <code>required string currency = 1;</code>
       * @return Whether the currency field is set.
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string currency = 1;</code>
       * @return The currency.
       */
      public java.lang.String getCurrency() {
        java.lang.Object ref = currency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            currency_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string currency = 1;</code>
       * @return The bytes for currency.
       */
      public com.google.protobuf.ByteString
          getCurrencyBytes() {
        java.lang.Object ref = currency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string currency = 1;</code>
       * @param value The currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrency(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string currency = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currency_ = getDefaultInstance().getCurrency();
        onChanged();
        return this;
      }
      /**
       * <code>required string currency = 1;</code>
       * @param value The bytes for currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        currency_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object blockchain_ = "";
      /**
       * <code>optional string blockchain = 2;</code>
       * @return Whether the blockchain field is set.
       */
      public boolean hasBlockchain() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string blockchain = 2;</code>
       * @return The blockchain.
       */
      public java.lang.String getBlockchain() {
        java.lang.Object ref = blockchain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blockchain_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string blockchain = 2;</code>
       * @return The bytes for blockchain.
       */
      public com.google.protobuf.ByteString
          getBlockchainBytes() {
        java.lang.Object ref = blockchain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockchain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string blockchain = 2;</code>
       * @param value The blockchain to set.
       * @return This builder for chaining.
       */
      public Builder setBlockchain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        blockchain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string blockchain = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockchain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        blockchain_ = getDefaultInstance().getBlockchain();
        onChanged();
        return this;
      }
      /**
       * <code>optional string blockchain = 2;</code>
       * @param value The bytes for blockchain to set.
       * @return This builder for chaining.
       */
      public Builder setBlockchainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        blockchain_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.CurrencyDTO)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.CurrencyDTO)
    private static final com.tenth.nft.protobuf.NftOperation.CurrencyDTO DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.CurrencyDTO();
    }

    public static com.tenth.nft.protobuf.NftOperation.CurrencyDTO getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CurrencyDTO>
        PARSER = new com.google.protobuf.AbstractParser<CurrencyDTO>() {
      @java.lang.Override
      public CurrencyDTO parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CurrencyDTO(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CurrencyDTO> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CurrencyDTO> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NFT_BLOCKCHAIN_ICOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string blockchain = 1;</code>
     * @return Whether the blockchain field is set.
     */
    boolean hasBlockchain();
    /**
     * <code>required string blockchain = 1;</code>
     * @return The blockchain.
     */
    java.lang.String getBlockchain();
    /**
     * <code>required string blockchain = 1;</code>
     * @return The bytes for blockchain.
     */
    com.google.protobuf.ByteString
        getBlockchainBytes();
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC}
   */
  public static final class NFT_BLOCKCHAIN_IC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC)
      NFT_BLOCKCHAIN_ICOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NFT_BLOCKCHAIN_IC.newBuilder() to construct.
    private NFT_BLOCKCHAIN_IC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NFT_BLOCKCHAIN_IC() {
      blockchain_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NFT_BLOCKCHAIN_IC();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NFT_BLOCKCHAIN_IC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              blockchain_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.class, com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.Builder.class);
    }

    private int bitField0_;
    public static final int BLOCKCHAIN_FIELD_NUMBER = 1;
    private volatile java.lang.Object blockchain_;
    /**
     * <code>required string blockchain = 1;</code>
     * @return Whether the blockchain field is set.
     */
    @java.lang.Override
    public boolean hasBlockchain() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string blockchain = 1;</code>
     * @return The blockchain.
     */
    @java.lang.Override
    public java.lang.String getBlockchain() {
      java.lang.Object ref = blockchain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          blockchain_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string blockchain = 1;</code>
     * @return The bytes for blockchain.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBlockchainBytes() {
      java.lang.Object ref = blockchain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockchain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlockchain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, blockchain_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, blockchain_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC other = (com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC) obj;

      if (hasBlockchain() != other.hasBlockchain()) return false;
      if (hasBlockchain()) {
        if (!getBlockchain()
            .equals(other.getBlockchain())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlockchain()) {
        hash = (37 * hash) + BLOCKCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getBlockchain().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC)
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_ICOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.class, com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockchain_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC build() {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC buildPartial() {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC result = new com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.blockchain_ = blockchain_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC other) {
        if (other == com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC.getDefaultInstance()) return this;
        if (other.hasBlockchain()) {
          bitField0_ |= 0x00000001;
          blockchain_ = other.blockchain_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasBlockchain()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object blockchain_ = "";
      /**
       * <code>required string blockchain = 1;</code>
       * @return Whether the blockchain field is set.
       */
      public boolean hasBlockchain() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string blockchain = 1;</code>
       * @return The blockchain.
       */
      public java.lang.String getBlockchain() {
        java.lang.Object ref = blockchain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            blockchain_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string blockchain = 1;</code>
       * @return The bytes for blockchain.
       */
      public com.google.protobuf.ByteString
          getBlockchainBytes() {
        java.lang.Object ref = blockchain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockchain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string blockchain = 1;</code>
       * @param value The blockchain to set.
       * @return This builder for chaining.
       */
      public Builder setBlockchain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        blockchain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string blockchain = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockchain() {
        bitField0_ = (bitField0_ & ~0x00000001);
        blockchain_ = getDefaultInstance().getBlockchain();
        onChanged();
        return this;
      }
      /**
       * <code>required string blockchain = 1;</code>
       * @param value The bytes for blockchain to set.
       * @return This builder for chaining.
       */
      public Builder setBlockchainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        blockchain_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IC)
    private static final com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC();
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NFT_BLOCKCHAIN_IC>
        PARSER = new com.google.protobuf.AbstractParser<NFT_BLOCKCHAIN_IC>() {
      @java.lang.Override
      public NFT_BLOCKCHAIN_IC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NFT_BLOCKCHAIN_IC(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NFT_BLOCKCHAIN_IC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NFT_BLOCKCHAIN_IC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NFT_BLOCKCHAIN_ISOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     * @return Whether the blockchain field is set.
     */
    boolean hasBlockchain();
    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     * @return The blockchain.
     */
    com.tenth.nft.protobuf.NftOperation.BlockchainDTO getBlockchain();
    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     */
    com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder getBlockchainOrBuilder();
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS}
   */
  public static final class NFT_BLOCKCHAIN_IS extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS)
      NFT_BLOCKCHAIN_ISOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NFT_BLOCKCHAIN_IS.newBuilder() to construct.
    private NFT_BLOCKCHAIN_IS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NFT_BLOCKCHAIN_IS() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NFT_BLOCKCHAIN_IS();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NFT_BLOCKCHAIN_IS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = blockchain_.toBuilder();
              }
              blockchain_ = input.readMessage(com.tenth.nft.protobuf.NftOperation.BlockchainDTO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blockchain_);
                blockchain_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.class, com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.Builder.class);
    }

    private int bitField0_;
    public static final int BLOCKCHAIN_FIELD_NUMBER = 1;
    private com.tenth.nft.protobuf.NftOperation.BlockchainDTO blockchain_;
    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     * @return Whether the blockchain field is set.
     */
    @java.lang.Override
    public boolean hasBlockchain() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     * @return The blockchain.
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.BlockchainDTO getBlockchain() {
      return blockchain_ == null ? com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance() : blockchain_;
    }
    /**
     * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder getBlockchainOrBuilder() {
      return blockchain_ == null ? com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance() : blockchain_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlockchain()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getBlockchain().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getBlockchain());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlockchain());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS other = (com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS) obj;

      if (hasBlockchain() != other.hasBlockchain()) return false;
      if (hasBlockchain()) {
        if (!getBlockchain()
            .equals(other.getBlockchain())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlockchain()) {
        hash = (37 * hash) + BLOCKCHAIN_FIELD_NUMBER;
        hash = (53 * hash) + getBlockchain().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS)
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_ISOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.class, com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBlockchainFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (blockchainBuilder_ == null) {
          blockchain_ = null;
        } else {
          blockchainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS build() {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS buildPartial() {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS result = new com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (blockchainBuilder_ == null) {
            result.blockchain_ = blockchain_;
          } else {
            result.blockchain_ = blockchainBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS other) {
        if (other == com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS.getDefaultInstance()) return this;
        if (other.hasBlockchain()) {
          mergeBlockchain(other.getBlockchain());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasBlockchain()) {
          return false;
        }
        if (!getBlockchain().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.tenth.nft.protobuf.NftOperation.BlockchainDTO blockchain_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.BlockchainDTO, com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder, com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder> blockchainBuilder_;
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       * @return Whether the blockchain field is set.
       */
      public boolean hasBlockchain() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       * @return The blockchain.
       */
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTO getBlockchain() {
        if (blockchainBuilder_ == null) {
          return blockchain_ == null ? com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance() : blockchain_;
        } else {
          return blockchainBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public Builder setBlockchain(com.tenth.nft.protobuf.NftOperation.BlockchainDTO value) {
        if (blockchainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockchain_ = value;
          onChanged();
        } else {
          blockchainBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public Builder setBlockchain(
          com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder builderForValue) {
        if (blockchainBuilder_ == null) {
          blockchain_ = builderForValue.build();
          onChanged();
        } else {
          blockchainBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public Builder mergeBlockchain(com.tenth.nft.protobuf.NftOperation.BlockchainDTO value) {
        if (blockchainBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              blockchain_ != null &&
              blockchain_ != com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance()) {
            blockchain_ =
              com.tenth.nft.protobuf.NftOperation.BlockchainDTO.newBuilder(blockchain_).mergeFrom(value).buildPartial();
          } else {
            blockchain_ = value;
          }
          onChanged();
        } else {
          blockchainBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public Builder clearBlockchain() {
        if (blockchainBuilder_ == null) {
          blockchain_ = null;
          onChanged();
        } else {
          blockchainBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder getBlockchainBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getBlockchainFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder getBlockchainOrBuilder() {
        if (blockchainBuilder_ != null) {
          return blockchainBuilder_.getMessageOrBuilder();
        } else {
          return blockchain_ == null ?
              com.tenth.nft.protobuf.NftOperation.BlockchainDTO.getDefaultInstance() : blockchain_;
        }
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.BlockchainDTO blockchain = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.BlockchainDTO, com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder, com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder> 
          getBlockchainFieldBuilder() {
        if (blockchainBuilder_ == null) {
          blockchainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tenth.nft.protobuf.NftOperation.BlockchainDTO, com.tenth.nft.protobuf.NftOperation.BlockchainDTO.Builder, com.tenth.nft.protobuf.NftOperation.BlockchainDTOOrBuilder>(
                  getBlockchain(),
                  getParentForChildren(),
                  isClean());
          blockchain_ = null;
        }
        return blockchainBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.NFT_BLOCKCHAIN_IS)
    private static final com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS();
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NFT_BLOCKCHAIN_IS>
        PARSER = new com.google.protobuf.AbstractParser<NFT_BLOCKCHAIN_IS>() {
      @java.lang.Override
      public NFT_BLOCKCHAIN_IS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NFT_BLOCKCHAIN_IS(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NFT_BLOCKCHAIN_IS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NFT_BLOCKCHAIN_IS> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.NFT_BLOCKCHAIN_IS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NFT_CURRENCY_ICOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.NFT_CURRENCY_IC)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string currency = 1;</code>
     * @return Whether the currency field is set.
     */
    boolean hasCurrency();
    /**
     * <code>required string currency = 1;</code>
     * @return The currency.
     */
    java.lang.String getCurrency();
    /**
     * <code>required string currency = 1;</code>
     * @return The bytes for currency.
     */
    com.google.protobuf.ByteString
        getCurrencyBytes();
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.NFT_CURRENCY_IC}
   */
  public static final class NFT_CURRENCY_IC extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.NFT_CURRENCY_IC)
      NFT_CURRENCY_ICOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NFT_CURRENCY_IC.newBuilder() to construct.
    private NFT_CURRENCY_IC(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NFT_CURRENCY_IC() {
      currency_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NFT_CURRENCY_IC();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NFT_CURRENCY_IC(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              currency_ = bs;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.class, com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENCY_FIELD_NUMBER = 1;
    private volatile java.lang.Object currency_;
    /**
     * <code>required string currency = 1;</code>
     * @return Whether the currency field is set.
     */
    @java.lang.Override
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string currency = 1;</code>
     * @return The currency.
     */
    @java.lang.Override
    public java.lang.String getCurrency() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          currency_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string currency = 1;</code>
     * @return The bytes for currency.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurrencyBytes() {
      java.lang.Object ref = currency_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        currency_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurrency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, currency_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, currency_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC other = (com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC) obj;

      if (hasCurrency() != other.hasCurrency()) return false;
      if (hasCurrency()) {
        if (!getCurrency()
            .equals(other.getCurrency())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.NFT_CURRENCY_IC}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.NFT_CURRENCY_IC)
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_ICOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.class, com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        currency_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC build() {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC buildPartial() {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC result = new com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currency_ = currency_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC other) {
        if (other == com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC.getDefaultInstance()) return this;
        if (other.hasCurrency()) {
          bitField0_ |= 0x00000001;
          currency_ = other.currency_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCurrency()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object currency_ = "";
      /**
       * <code>required string currency = 1;</code>
       * @return Whether the currency field is set.
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string currency = 1;</code>
       * @return The currency.
       */
      public java.lang.String getCurrency() {
        java.lang.Object ref = currency_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            currency_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string currency = 1;</code>
       * @return The bytes for currency.
       */
      public com.google.protobuf.ByteString
          getCurrencyBytes() {
        java.lang.Object ref = currency_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          currency_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string currency = 1;</code>
       * @param value The currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrency(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        currency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string currency = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrency() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currency_ = getDefaultInstance().getCurrency();
        onChanged();
        return this;
      }
      /**
       * <code>required string currency = 1;</code>
       * @param value The bytes for currency to set.
       * @return This builder for chaining.
       */
      public Builder setCurrencyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        currency_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.NFT_CURRENCY_IC)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.NFT_CURRENCY_IC)
    private static final com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC();
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NFT_CURRENCY_IC>
        PARSER = new com.google.protobuf.AbstractParser<NFT_CURRENCY_IC>() {
      @java.lang.Override
      public NFT_CURRENCY_IC parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NFT_CURRENCY_IC(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NFT_CURRENCY_IC> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NFT_CURRENCY_IC> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IC getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NFT_CURRENCY_ISOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.ruixi.tpulse.convention.NFT_CURRENCY_IS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     * @return Whether the currency field is set.
     */
    boolean hasCurrency();
    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     * @return The currency.
     */
    com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrency();
    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     */
    com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrencyOrBuilder();
  }
  /**
   * Protobuf type {@code com.ruixi.tpulse.convention.NFT_CURRENCY_IS}
   */
  public static final class NFT_CURRENCY_IS extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.ruixi.tpulse.convention.NFT_CURRENCY_IS)
      NFT_CURRENCY_ISOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NFT_CURRENCY_IS.newBuilder() to construct.
    private NFT_CURRENCY_IS(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NFT_CURRENCY_IS() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NFT_CURRENCY_IS();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NFT_CURRENCY_IS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) != 0)) {
                subBuilder = currency_.toBuilder();
              }
              currency_ = input.readMessage(com.tenth.nft.protobuf.NftOperation.CurrencyDTO.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(currency_);
                currency_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.class, com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENCY_FIELD_NUMBER = 1;
    private com.tenth.nft.protobuf.NftOperation.CurrencyDTO currency_;
    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     * @return Whether the currency field is set.
     */
    @java.lang.Override
    public boolean hasCurrency() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     * @return The currency.
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrency() {
      return currency_ == null ? com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance() : currency_;
    }
    /**
     * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
     */
    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrencyOrBuilder() {
      return currency_ == null ? com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance() : currency_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCurrency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCurrency().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getCurrency());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCurrency());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS)) {
        return super.equals(obj);
      }
      com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS other = (com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS) obj;

      if (hasCurrency() != other.hasCurrency()) return false;
      if (hasCurrency()) {
        if (!getCurrency()
            .equals(other.getCurrency())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrency()) {
        hash = (37 * hash) + CURRENCY_FIELD_NUMBER;
        hash = (53 * hash) + getCurrency().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.ruixi.tpulse.convention.NFT_CURRENCY_IS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.ruixi.tpulse.convention.NFT_CURRENCY_IS)
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_ISOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.class, com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.Builder.class);
      }

      // Construct using com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCurrencyFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (currencyBuilder_ == null) {
          currency_ = null;
        } else {
          currencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.tenth.nft.protobuf.NftOperation.internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS getDefaultInstanceForType() {
        return com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.getDefaultInstance();
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS build() {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS buildPartial() {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS result = new com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          if (currencyBuilder_ == null) {
            result.currency_ = currency_;
          } else {
            result.currency_ = currencyBuilder_.build();
          }
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS) {
          return mergeFrom((com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS other) {
        if (other == com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS.getDefaultInstance()) return this;
        if (other.hasCurrency()) {
          mergeCurrency(other.getCurrency());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasCurrency()) {
          return false;
        }
        if (!getCurrency().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.tenth.nft.protobuf.NftOperation.CurrencyDTO currency_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> currencyBuilder_;
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       * @return Whether the currency field is set.
       */
      public boolean hasCurrency() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       * @return The currency.
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO getCurrency() {
        if (currencyBuilder_ == null) {
          return currency_ == null ? com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance() : currency_;
        } else {
          return currencyBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public Builder setCurrency(com.tenth.nft.protobuf.NftOperation.CurrencyDTO value) {
        if (currencyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          currency_ = value;
          onChanged();
        } else {
          currencyBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public Builder setCurrency(
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder builderForValue) {
        if (currencyBuilder_ == null) {
          currency_ = builderForValue.build();
          onChanged();
        } else {
          currencyBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public Builder mergeCurrency(com.tenth.nft.protobuf.NftOperation.CurrencyDTO value) {
        if (currencyBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
              currency_ != null &&
              currency_ != com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance()) {
            currency_ =
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO.newBuilder(currency_).mergeFrom(value).buildPartial();
          } else {
            currency_ = value;
          }
          onChanged();
        } else {
          currencyBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public Builder clearCurrency() {
        if (currencyBuilder_ == null) {
          currency_ = null;
          onChanged();
        } else {
          currencyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder getCurrencyBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCurrencyFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      public com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder getCurrencyOrBuilder() {
        if (currencyBuilder_ != null) {
          return currencyBuilder_.getMessageOrBuilder();
        } else {
          return currency_ == null ?
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO.getDefaultInstance() : currency_;
        }
      }
      /**
       * <code>required .com.ruixi.tpulse.convention.CurrencyDTO currency = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder> 
          getCurrencyFieldBuilder() {
        if (currencyBuilder_ == null) {
          currencyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.tenth.nft.protobuf.NftOperation.CurrencyDTO, com.tenth.nft.protobuf.NftOperation.CurrencyDTO.Builder, com.tenth.nft.protobuf.NftOperation.CurrencyDTOOrBuilder>(
                  getCurrency(),
                  getParentForChildren(),
                  isClean());
          currency_ = null;
        }
        return currencyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.ruixi.tpulse.convention.NFT_CURRENCY_IS)
    }

    // @@protoc_insertion_point(class_scope:com.ruixi.tpulse.convention.NFT_CURRENCY_IS)
    private static final com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS();
    }

    public static com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NFT_CURRENCY_IS>
        PARSER = new com.google.protobuf.AbstractParser<NFT_CURRENCY_IS>() {
      @java.lang.Override
      public NFT_CURRENCY_IS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NFT_CURRENCY_IS(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NFT_CURRENCY_IS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NFT_CURRENCY_IS> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.tenth.nft.protobuf.NftOperation.NFT_CURRENCY_IS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_BlockchainDTO_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_CurrencyDTO_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017operation.proto\022\033com.ruixi.tpulse.conv" +
      "ention\"c\n\rBlockchainDTO\022\024\n\014mainCurrency\030" +
      "\001 \002(\t\022<\n\ncurrencies\030\002 \003(\0132(.com.ruixi.tp" +
      "ulse.convention.CurrencyDTO\"3\n\013CurrencyD" +
      "TO\022\020\n\010currency\030\001 \002(\t\022\022\n\nblockchain\030\002 \001(\t" +
      "\"\'\n\021NFT_BLOCKCHAIN_IC\022\022\n\nblockchain\030\001 \002(" +
      "\t\"S\n\021NFT_BLOCKCHAIN_IS\022>\n\nblockchain\030\001 \002" +
      "(\0132*.com.ruixi.tpulse.convention.Blockch" +
      "ainDTO\"#\n\017NFT_CURRENCY_IC\022\020\n\010currency\030\001 " +
      "\002(\t\"M\n\017NFT_CURRENCY_IS\022:\n\010currency\030\001 \002(\013" +
      "2(.com.ruixi.tpulse.convention.CurrencyD" +
      "TOB&\n\026com.tenth.nft.protobufB\014NftOperati" +
      "on"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_ruixi_tpulse_convention_BlockchainDTO_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_BlockchainDTO_descriptor,
        new java.lang.String[] { "MainCurrency", "Currencies", });
    internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_com_ruixi_tpulse_convention_CurrencyDTO_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_CurrencyDTO_descriptor,
        new java.lang.String[] { "Currency", "Blockchain", });
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IC_descriptor,
        new java.lang.String[] { "Blockchain", });
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_NFT_BLOCKCHAIN_IS_descriptor,
        new java.lang.String[] { "Blockchain", });
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IC_descriptor,
        new java.lang.String[] { "Currency", });
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_ruixi_tpulse_convention_NFT_CURRENCY_IS_descriptor,
        new java.lang.String[] { "Currency", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
